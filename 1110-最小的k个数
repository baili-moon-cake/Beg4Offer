class Solution {
public:
    vector<int> getLeastNumbers(vector<int>& arr, int k) {
        vector<int> res;
        if(arr.empty() || k <=0 || k > arr.size()) return res;
        int start = 0;
        int end = arr.size()-1;
        int index = partition(arr, start, end);
        while(index != k-1){ //==的时候，算上inde位置就满足k个了
            if(index<k-1){
                start = index+1;
            }
            else{
                end=index-1;
            }
            index = partition(arr, start, end);
        }
        for(int i=0; i<=index; i++)
            res.push_back(arr[i]);
        return res;
    }
    int partition(vector<int>& arr, int start, int end){
        int pivot = arr[end];
        int i = start;
        for(int j=start; j<end; j++){
            if(arr[j]<=pivot){
                swap(arr[i],arr[j]);
                i++;
            }
        }
        swap(arr[i],arr[end]);
        return i;
    }
};

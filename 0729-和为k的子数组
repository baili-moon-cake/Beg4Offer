/*边存边查看 map，如果 map 中存在 key 为「当前前缀和 - k」，
说明这个之前出现的前缀和，满足「当前前缀和 - 该前缀和 == k」，
它出现的次数，累加给 count。
*/
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int sum = 0, res = 0;
        unordered_map<int, int> cul;
        cul[0] = 1;
        for (auto &m : nums) {
            sum += m;
            res += cul[sum - k];
            ++cul[sum];
        }
        return res;
    }
};

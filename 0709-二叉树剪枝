/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* pruneTree(TreeNode* root) {
        if(!root) return nullptr;
        root->left=pruneTree(root->left);
        root->right=pruneTree(root->right);
        //要放在后面，类似于后续遍历，从低往上剪，如果放在上面，就先判断过了，这时候下面修剪完毕，这个节点就没法再删除了
        if(!root->left && !root->right && root->val==0) return nullptr;
        return root;
    }
};

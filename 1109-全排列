class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        if(nums.empty()) return res;
        vector<int> track;
        vector<bool> visited(nums.size(), false);
        helper(res, nums, track, visited);
        return res;
    }
    void helper(vector<vector<int>>& res, vector<int>& nums, vector<int>& track, vector<bool>& visited){
        if(track.size()==nums.size()) {
            res.push_back(track);
            return;
        }
        for(int i=0; i<nums.size(); i++){
            if(visited[i]) continue;

            visited[i]=true;
            track.push_back(nums[i]);
            helper(res, nums, track, visited);
            track.pop_back();
            visited[i]=false;
        }
    }
};

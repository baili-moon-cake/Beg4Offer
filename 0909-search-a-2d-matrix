class Solution {
public:
    void map_location(int loc, int& rows, int& cols, int& r, int& c){
        c = loc % cols;
        r = loc / cols;
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.empty() || matrix[0].empty()) return false;
        int left = 0;
        int right = matrix.size() * matrix[0].size()-1;
        int rows = matrix.size(), cols = matrix[0].size();
        int r = 0, c = 0;
        while(left < right){
            int mid = left + (right - left) / 2;
            map_location(mid, rows, cols, r, c);
            if(matrix[r][c] == target) return true;
            if(matrix[r][c] > target) right=mid-1;
            if(matrix[r][c] < target) left=mid+1;
        }
        map_location(left, rows, cols, r, c);
        if(matrix[r][c] == target) return true;
        return false;
    }
};

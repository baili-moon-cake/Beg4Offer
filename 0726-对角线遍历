class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& matrix) {
        vector<int> res;
        if(matrix.empty()) return res;
        int m=matrix.size();
        int n=matrix[0].size();
        int i=0; //横纵坐标的和，依次递增，最高就是m+n-1
        while(i<m+n){
            //第1,3,5次，行递减，列递增
            int r= i<m ? i : m-1; //行尽量取最大值
            int c=i-r;
            while(r>=0 && c<n){//满足和的前提下，范围内遍历
                res.push_back(matrix[r][c]);
                r--;
                c++;
            }
            i++; //反过来
            
            if(i>=m+n) break;
            
            c= i<n ? i : n-1; //列尽量取最大值
            r=i-c;
            while(r<m && c>=0){//满足和的前提下，范围内遍历
                res.push_back(matrix[r][c]);
                r++;
                c--;
            }
            i++;
        }
        return res;
    }
};

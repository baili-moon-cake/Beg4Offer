class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        if(s1.size() > s2.size()) return false;
        vector<int> count1(26, 0), count2(26, 0);
        int window = s1.size();
        for(int i = 0; i < window; i++){
            count1[s1[i]-'a']++;
            count2[s2[i]-'a']++;
        }
        if(count1==count2) return true;
        for(int i = 0; i<=(int)s2.size()-window-1; i++){ //注意int化，否则边界溢出
            count2[s2[i]-'a']--; //下一个移动的位置
            count2[s2[i+window]-'a']++;
            if(count1==count2) return true;
        }
        return false;
    }
};

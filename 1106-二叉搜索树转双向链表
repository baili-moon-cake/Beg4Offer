/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node* treeToDoublyList(Node* root) {
        if(!root) return nullptr;
        stack<Node*> s;
        Node* p=root;
        Node* dummy = new Node(0);
        Node* cur;
        Node* pre = dummy;
        while(!s.empty() || p){
            while(p){
                s.push(p);
                p=p->left;
            }
            p=s.top();
            s.pop();

            cur=p;
            pre->right=cur;
            cur->left=pre;
            pre=cur;

            p=p->right;
        }
        
        p=dummy;
        while(p->right) p=p->right;
        p->right=dummy->right;
        dummy->right->left=p;
        return dummy->right;
    }
};

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head || !head->next || !head->next->next) return head;
        //保证有三个
        ListNode* head1 = head;
        ListNode* head2 = head->next; //1是奇，2是偶
        ListNode* p1 = head1, * p2 = head2;
        ListNode* p=head2->next;
        int cnt=3;
        while(p){
            if(cnt%2==1){
                p1->next=p;
                p1=p1->next;
            }
            else{
                p2->next=p;
                p2=p2->next;
            }
            p=p->next;
            cnt++;
        }
        p1->next=head2;
        p2->next=nullptr;
        return head1;
    }
};

class Solution {
/*
其实很简单！

想象你是那个在格子上行走的小人，格子里面的数字代表“能量”，你需要“能量”才能继续行走。

每次走到一个格子的时候，你检查现在格子里面的“能量”和你自己拥有的“能量”哪个更大，取更大的“能量”！ 如果你有更多的能量，你就可以走的更远啦！~
*/
public:
    bool canJump(vector<int>& nums) {
        if(nums.size() <= 1) return true;
        int energy = nums[0];
        int i;
        for(i = 1; i < nums.size(); i++){
            if(energy<=0) break; //没有能量跳到当前i这个位置
            energy--;
            if(energy<nums[i]) energy=nums[i];
            
        }
        return i==nums.size();

    }
};

/*
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int len = nums.size();
        if (len <= 1) return true;

        int maxDis = nums[0]; //能够走到的最远下标位置

        for (int i = 1; i < len; i++) {
            if (i <= maxDis) {
                maxDis = max(maxDis, nums[i]+i);
            }
        }

        return maxDis >= len - 1;
    }
};
*/

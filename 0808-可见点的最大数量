class Solution {
public:
    int visiblePoints(vector<vector<int>>& points, int angle, vector<int>& location) {
        const double pi = 3.1415926;
        int s = 0;
        vector<double> q;
        for(auto p: points) {
            auto x = p[0] - location[0], y = p[1] - location[1];
            if(x == 0 && y == 0) s ++;
            else q.push_back(atan2(y, x) + pi);
        }

        int n = q.size();
        sort(q.begin(), q.end());
        for(int i = 0; i < n; i ++) q.push_back(q[i] + 2 * pi);

        int t = 0, l = 0, r = 0;
        while(l < n) {
            if(r < q.size() && q[r] - q[l] <= angle * 1.0 / 180 * pi) {
                t = max(t, r - l + 1);
                r++;
            }
            else l++;
        }
        return s + t;
    }
};

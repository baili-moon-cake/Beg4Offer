/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSubStructure(TreeNode* A, TreeNode* B) { //以AB为根节点开始
        if(!A || !B) return false;
        return hasSubStructure(A, B) || isSubStructure(A->left,B) || isSubStructure(A->right,B);
    }
    bool hasSubStructure(TreeNode* A, TreeNode* B){//就以当前两个根节点开始算，看是不是，固定的
        if(!B) return true; //B遍历完成了，都一样
        if(!A) return false; //B没遍历完，A没了
        if(A->val!=B->val) return false;
        return hasSubStructure(A->left,B->left) && hasSubStructure(A->right,B->right);
    }
};

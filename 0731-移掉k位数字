//贪心的思想，每次都消除一个高位，所以从左往右遍历
//消除哪一位呢，当前位要比后面大才可以，这样消除后才会变小
//如果没找到，说明是递增的，移掉最后一位
/最后删除前面的0，但起码要有一位

class Solution {
public:
    string removeKdigits(string num, int k) {
        if(num.size()==k) return "0";
        for(int i=0; i<k; i++){
            int index=-1;
            for(int j=1; j<num.size(); j++){
                if(num[j] < num[j-1]) {
                    index=j-1;
                    break;
                }
            }
            if(index==-1) index=num.size()-1;
            num.erase(num.begin()+index);
        }
        while(num.size()>1 && num[0]=='0') num.erase(num.begin());
        return num;
    }
};

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head) return nullptr;
        ListNode* dummy = new ListNode(0);
        dummy->next = head;

        ListNode* pre = dummy;
        ListNode* cur = head;
        ListNode* nex = cur->next;
        
        int length = 0;
        while(cur){
            length++;
            cur=cur->next;
        }
        ListNode* start = dummy, *end = head;
        cur = head;
        for(int i=0; i<length/k; i++){ //第i组
            for(int j=0; j<k; j++){ //重复
                nex = cur->next;
                cur->next = pre;
                pre=cur;
                cur=nex;
            }
            start->next = pre;
            end->next=cur;
            start=end;
            end=start->next;
        }
        return dummy->next;
    }
};
